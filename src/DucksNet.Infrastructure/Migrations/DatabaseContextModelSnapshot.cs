// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamuraiApp.Infrastructure.Sqlite;

#nullable disable

namespace DucksNet.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("DucksNet.Domain.Model.Cage", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SizeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("SizeId");

                    b.ToTable("DucksNet.Infrastructure.Prelude.IDatabaseContext.Cages");
                });

            modelBuilder.Entity("DucksNet.Domain.Model.CageTimeBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CageId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OccupantId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DucksNet.Infrastructure.Prelude.IDatabaseContext.CageTimeBlocks");
                });

            modelBuilder.Entity("DucksNet.Domain.Model.Enums.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("DucksNet.Domain.Model.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdAppointment")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdClient")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DucksNet.Infrastructure.Prelude.IDatabaseContext.MedicalRecords");
                });

            modelBuilder.Entity("DucksNet.Domain.Model.Cage", b =>
                {
                    b.HasOne("DucksNet.Domain.Model.Enums.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Size");
                });
#pragma warning restore 612, 618
        }
    }
}

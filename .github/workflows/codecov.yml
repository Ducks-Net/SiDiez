# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET codecov

on:
  push:
    branches: [ "trunk", "dev" ]
  pull_request:
    branches: [ "trunk", "dev" ]

jobs:
  codecov:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Add altcov dep
      run: dotnet add tests/DucksNet.UnitTests/ package AltCover
    - name: Add altcov dep to integration tests
      run: dotnet add tests/DucksNet.IntegrationTests/ package AltCover
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Disable fs watchers
      run: export DOTNET_USE_POLLING_FILE_WATCHER=true
    - name: Test
      run: dotnet test --no-build --verbosity normal -p:AltCover=true
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Install sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
      - name: sonarscanner begin
        run: dotnet sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
      - name: build
        run: dotnet build --no-incremental
      - name: get covearge
        run: dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
      - name: upload coverage to sonarqube
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"